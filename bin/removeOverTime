#!/usr/bin/env node
var connectdb=require('../model/connectdb.js');

var date=new Date();
var today=date.getFullYear().toString()+'-'+(date.getMonth()+1).toString()+'-'+date.getDate().toString();
var todayTime=new Date(today).getTime();
// console.log('today',today,todayTime);

async function removeOverTime(){
  await fixGroups();
  var allGroupsShowIdArr=await getAllGroupsShowId(); //取得每個揪團表演id
  console.log('allGroupsShowIdArr',allGroupsShowIdArr);
  if(allGroupsShowIdArr.length===0){  //如果沒有揪團
    console.log('groups empty');
    return;
  }
  var overTimeShowId=[];
  for(var i in allGroupsShowIdArr){  //取得過期表演id
    //取得過期揪團表演時間 > 刪除過期聊天室  > 刪除過期揪團
    // console.log(i);
    var overTime=await checkGroupsShowOverTime(allGroupsShowIdArr[i]);
    if(overTime!==undefined){
      overTimeShowId.push(overTime);
    }
  }
  if(overTimeShowId.length===0){  //如果沒有揪團
    console.log('nothing groups overtime');
    return;
  }
  console.log('overTimeShowId',overTimeShowId);
  overTimeShowId=overTimeShowId.filter(function(data,index,arr){
    return arr.indexOf(data)===index;  //取得過期showId唯一值
  });
  console.log('overTimeShowId(only)',overTimeShowId);
  var overTimeGroupArr=[];
  for(var x in overTimeShowId){
    var overTimeGroupId=await getOverTimeGroupId(overTimeShowId[x]);
    overTimeGroupArr.push(overTimeGroupId);
  }
  //----------------------將二維陣列轉成一維陣列
  overTimeGroupArr=overTimeGroupArr.join(',');
  overTimeGroupArr=overTimeGroupArr.split(',');
  console.log('過期揪團ID：',overTimeGroupArr);
  //-------------------------------
  for(var y in overTimeGroupArr){
    // await deleteOverTimechatRoom(overTimeGroupArr[y]); //刪除過期聊天室
    // await deleteOverTimeGroups(overTimeGroupArr[y]);//刪除過期揪團
    //更新會員creatGroup & joinGroup
    await updateOverTimeGroupHost(overTimeGroupArr[y]);
    await updateOverTimeGroupCustomer(overTimeGroupArr[y]);
    //select 選出該欄位(create可直接用memberId找,join全表找)轉成陣列取出該值,存回DB
  }
  // await removeOverTimeShow();  //刪除過期表演
  console.log('done');
}
// removeOverTime();
// exports.removeOverTime=removeOverTime;

function getAllGroupsShowId(){   //取得目前所有揪團表演Id
  var selectStr='select * from groups';
  var allGroupsShowIdArr=[];
  return new Promise(function (resolve,reject){
    connectdb.query(selectStr,function(err,rows){
      if(!err&&rows.length!==0){
        for(var i in rows){
          // console.log(rows[i].showId);
          allGroupsShowIdArr.push(rows[i].showId);
        }
        resolve(allGroupsShowIdArr);
      }
    });
  });
}

function checkGroupsShowOverTime(groupsShowId){//取得過期揪團表演Id
  var selectStr='select * from govmusic where id=?';
  return new Promise(function (resolve,reject){
    connectdb.query(selectStr,groupsShowId,function(err,rows){
      if(!err&&rows.length!==0){
        for(var i in rows){
          var showDate=rows[i].time.substring(0,10);
          var showTimestamp=new Date(showDate).getTime();
          if(showTimestamp<todayTime){
            resolve(rows[i].id);
          }else{
            resolve();
          }
        }
      }
    });
  });
}

function getOverTimeGroupId(showId){ //以過期表演Id取得過期揪團Id
  var selectStr='select * from groups where showId = ?';
  var temp=[];
  return new Promise(function (resolve,reject){
    connectdb.query(selectStr,showId,function(err,rows){
      if(!err&&rows.length!==0){
        for(var i in rows){
          temp.push(rows[i].id); //將找到所有過期表演相關的揪團暫存
        }
        resolve(temp);
      }
    });
  });
}



function updateOverTimeGroupHost(groupId){//更新會員過期createGroup
  var updateIndex="'%"+groupId+"%'";
  var updateStr='select * from member where createGroup like '+updateIndex;
  return new Promise(function (resolve,reject){
    connectdb.query(updateStr,async function(err,rows){
      if(!err){
        for(var i in rows){
          var oldCreateGroupArr=rows[i].createGroup.split(',');
          var correctGroupId=oldCreateGroupArr.indexOf(groupId);
          if(correctGroupId!==-1){
            var newCreateGroupArr=getNewGroupArr(oldCreateGroupArr,groupId).join(',');
            var updateThisStr='update member set createGroup=? where id =?';
            var memberId=rows[i].id;
            var updateThisValue=[newCreateGroupArr,memberId];
            console.log(updateThisStr,updateThisValue);
            connectdb.query(updateThisStr,updateThisValue,function(err){
              if(!err){
                resolve();
              }
            });
          }else{
            resolve();
          }
        }
      }
    });
  });
}

function updateOverTimeGroupCustomer(groupId){//更新會員過期joinGroup
  var updateIndex="'%"+groupId+"%'";
  var updateStr='select * from member where joinGroup like '+updateIndex;
  return new Promise(function (resolve,reject){
    connectdb.query(updateStr,function(err,rows){
      if(!err){
        for(var i in rows){
          var oldJoinGroupArr=rows[i].joinGroup.split(',');
          var correctGroupId=oldJoinGroupArr.indexOf(groupId);
          if(correctGroupId!==-1){
            var newJoinGroupArr=getNewGroupArr(oldJoinGroupArr,groupId).join(',');
            var updateThisStr='update member set joinGroup=? where id =?';
            var memberId=rows[i].id;
            var updateThisValue=[newJoinGroupArr,memberId];
            console.log(updateThisStr,updateThisValue);
            connectdb.query(updateThisStr,updateThisValue,function(err){
              if(!err){
                resolve();
              }
            });
          }else{
            resolve();
          }
        }
      }
    });
  });
}

function getNewGroupArr(oldGroupArr,groupId){  //取得更新後揪團
  var newGroupArr=[];
  for(var x in oldGroupArr){
    if(oldGroupArr[x]!==groupId){
      newGroupArr.push(oldGroupArr[x]);
    }
  }
  return newGroupArr;
}

function fixGroups(){
  return new Promise(async function(resolve,reject){
    var newPhotoArr=await getNewGroup();
    await updateGroupsShowId(newPhotoArr);
    resolve();
  });
}
function getNewGroup(){
  return new Promise(function(resolve,reject){
    var newPhotoArr=[];
    var selectStr='select * from groups';
    connectdb.query(selectStr,function(err,rows){
      if(err){
        reject(err);
        return;
      }
      for(var i in rows){
        newPhotoArr.push(rows[i]);
      }
      if(newPhotoArr.length===rows.length){
        // console.log(newPhotoArr);
        resolve(newPhotoArr);
      }
    });
  });
}
function updateGroupsShowId(group){
  return new Promise(function(resolve,reject){
      console.log("starting fixGroups");
      var groupArr=[];
      for(var i in group){
        var temp={
          id:group[i].id,
          photoUrl:group[i].photo
        };
        groupArr.push(temp);
      }
      for(var a in groupArr){
        updateGroupshowid(groupArr[a]);
      }
      resolve();
      function updateGroupshowid(thisGroup){
        var selectStr='select id from govmusic where photo=?';
        connectdb.query(selectStr,[thisGroup.photoUrl],function(err,rows){
          if(err){
            reject(err);
            return;
          }
          if(rows.length===0){
            reject();
            return;
          }
          var updateStr='update groups set showId=? where id=?';
          var updateValue=[rows[0].id,thisGroup.id];
          connectdb.query(updateStr,updateValue,function(err){
            if(err){
              console.log(err);
            }
          });
        });
      }
    });
}


// function deleteOverTimechatRoom(groupId){
//   var deleteStr='delete from chatroom where groupId = ?';
//   return new Promise(function (resolve,reject){
//     connectdb.query(deleteStr,groupId,function(err,rows){
//       if(!err){
//         resolve();
//       }
//     });
//   });
// }
//
// function deleteOverTimeGroups(groupId){
//   var deleteStr='delete from groups where id = ?';
//   return new Promise(function (resolve,reject){
//     connectdb.query(deleteStr,groupId,function(err,rows){
//       if(!err){
//         resolve();
//       }
//     });
//   });
// }
//
// function removeOverTimeShow(){
//   console.log('todayTime',todayTime);
//   return new Promise(function(resolve,reject){
//     connectdb.query('select * from govmusic',function(err,rows){
//       if(err){
//         reject(err);
//         return;
//       }else{
//         for(var i in rows){
//           var showDate=rows[i].time.substring(0,10);
//           // console.log('showDate',showDate);
//           var showTime=new Date(showDate).getTime();
//           // console.log('showTime',showTime);
//           if(showTime<todayTime){
//             connectdb.query('delete from govmusic where id=?',[rows[i].id]);
//           }
//         }
//         resolve();
//       }
//     });
//   });
// }
